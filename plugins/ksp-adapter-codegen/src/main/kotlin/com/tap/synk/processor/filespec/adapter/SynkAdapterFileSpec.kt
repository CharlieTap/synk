package com.tap.synk.processor.filespec.adapter

import com.google.devtools.ksp.symbol.KSFile
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.FunSpec
import com.squareup.kotlinpoet.KModifier
import com.squareup.kotlinpoet.ParameterSpec
import com.squareup.kotlinpoet.PropertySpec
import com.squareup.kotlinpoet.TypeName
import com.squareup.kotlinpoet.TypeSpec
import com.squareup.kotlinpoet.ksp.addOriginatingKSFile
import com.tap.synk.processor.context.ProcessorContext

context(ProcessorContext)
internal fun synkAdapterFileSpec(
    packageName: String,
    idResolverClassName: String,
    mapEncoderClassName: String,
    synkAdapterClassName: String,
    customIdResolverTypeName: TypeName,
    customMapEncoderTypeName: TypeName,
    customSynkAdapterTypeName: TypeName,
    originatingFile: KSFile
) = FileSpec.builder(
    packageName = packageName,
    fileName = synkAdapterClassName
).apply {
    indent("    ")
    addFileComment("Code generated by SynkAdapter plugin. Do not edit this file.")
    addType(
        TypeSpec.classBuilder(synkAdapterClassName)
            .primaryConstructor(
                FunSpec.constructorBuilder()
                    .addParameter(
                        ParameterSpec
                            .builder("idResolver", customIdResolverTypeName)
                            .defaultValue("$idResolverClassName()")
                            .build()
                    )
                    .addParameter(
                        ParameterSpec
                            .builder("mapEncoder", customMapEncoderTypeName)
                            .defaultValue("$mapEncoderClassName()")
                            .build()
                    )
                    .build()
            )
            .addProperty(
                PropertySpec.builder("idResolver", customIdResolverTypeName)
                    .initializer("idResolver")
                    .addModifiers(KModifier.PRIVATE)
                    .build()
            )
            .addProperty(
                PropertySpec.builder("mapEncoder", customMapEncoderTypeName)
                    .initializer("mapEncoder")
                    .addModifiers(KModifier.PRIVATE)
                    .build()
            )
            .addSuperinterface(customSynkAdapterTypeName)
            .addSuperinterface(customIdResolverTypeName, "idResolver")
            .addSuperinterface(customMapEncoderTypeName, "mapEncoder")
            .addOriginatingKSFile(originatingFile)
            .build()
    )
}.build()
